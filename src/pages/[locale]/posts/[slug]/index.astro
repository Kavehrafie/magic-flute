---
import { DEFAULT_LOCALE } from "../../../../lib/i18n";
export const prerender = true;

import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import { getLocales } from "@lib/i18n";
import Layout from "@layouts/Layout.astro";
import { Debug } from "astro:components";
import { listIcons } from "@iconify/react";
import { head } from "lodash-es";
// import getSortedPosts from "@utils/getSortedPosts";
// import { getPost } from "../../../../utils/getPosts";

// import { getEntry } from "astro:content"

// const {locale} = Astro.locals
const { slug } = Astro.params;

// const post = await getPost(`../content/blog/${locale}/adding-new-post.md`)
// const post2 = getEntry('blog', slug)
//
// const post = await getEntry('blog', slug);

//

// const posts = getEntry('blog', slug)
// const posts = await Astro.glob(`/src/content/blog/**/*.md`);

// const sortedPosts = getSortedPosts(posts, locale)

// const {Content, url, file} = posts[0]
// if (!post) Astro.redirect('/404')
//
// const {Content, headings, remarkPluginFrontmatter } = await post.render()

export async function getStaticPaths() {
  const locales = getLocales();

  const posts = await getCollection("blog", ({ data }) => !data?.draft);
  return posts.map(post => {
    const locale = post.id.split("/")[0];
    return {
      params: {
        slug: post.slug,
        locale:
          post?.data.locale && locales.includes(locale)
            ? locale
            : DEFAULT_LOCALE,
      },
      props: { post },
    };
  });
}

const { locale } = Astro.params;
const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();
---

<Layout {locale}>
  <!--{slug} -&#45;&#45; {locale}-->
  <!--<Debug {post} />-->
  <h1
    class="flex items-center text-center font-fa-sans text-7xl font-black leading-tight lg:h-72"
  >
    {post.data.title}
  </h1>

  <main class="grid-container fullwidth">
    <Image
      class="breakout w-full rounded-md object-cover"
      {...post.data.featuredImage}
    />
    <nav class="fullwidth top-16 sticky grid-container bg-background w-full">
      <ul class="flex flex-wrap gap-4 py-4">
        {
          headings
            .filter(heading => heading.depth < 3)
            .map(heading => (
              <li>
                <a class="px-4 py-1 rounded hover:bg-muted" href={"#" + heading.slug} >{heading.text}</a>
              </li>
            ))
        }
      </ul>
    </nav>
    <article class="prose">
      <Content />
    </article>
  </main>
</Layout>
