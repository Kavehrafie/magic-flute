---
import { DEFAULT_LOCALE, useIndiaDigits, useTranslations } from "../../../../lib/i18n";
export const prerender = true;

import { getCollection, getEntryBySlug } from "astro:content";
import { Image } from "astro:assets";

import { getLocales } from "@lib/i18n";
import Layout from "@layouts/Layout.astro";
import { Debug } from "astro:components";
import { listIcons } from "@iconify/react";
import { head } from "lodash-es";
import slugify from "../../../../utils/slugify";

const { slug } = Astro.params;

export async function getStaticPaths() {
  const locales = getLocales();

  const posts = await getCollection("blog", ({ data }) => !data?.draft);
  
  return posts.map(post => {
    const routeSegments = post.id.split("/");
    const locale = routeSegments[0];

    console.log(locale);
    
    return {
      params: {
        slug: slugify(post),
        locale: locale
      },
      props: { post },
    };
  });
}

useIndiaDigits()

const { locale } = Astro.params;
const { post } = Astro.props;
const { Content, headings, remarkPluginFrontmatter: { readingTime, pubDate } } = await post.render();

const authors = post.data?.authors ? await Promise.all(post.data?.authors?.map(async author => {
  const {data: {firstName, lastName, slug}} = await getEntryBySlug(author.collection, author.slug);
  return {slug, name: `${firstName} ${lastName}`}
})) : []

---

<Layout locale={locale} showProgressBar={true}>
  <h1
    class="flex items-center text-center font-fa-sans text-7xl font-black leading-tight py-6"
  >
    {post.data.title}
  </h1>


  <div class="p-2 flex items-center justify-center gap-4 text-sm text-right w-full">
    <p class="text-center text-lg py-6">
      {authors && <p class=" font-semibold text-lg"> {authors.map(author => author.name).join(", ")}</p>}
      {new Date(pubDate).toLocaleDateString(locale)}
    </p>
    |
    <p>
   {readingTime.text.toIndiaDigits().replace("min read", useTranslations(locale)('reading.minutes'))}
    </p>

  </div>

  <main class="grid-container fullwidth">
    <Image
      class="max-h-[600px] rounded-md object-cover w-full breakout"
      {...post.data.featuredImage}
    />
    <nav class="fullwidth top-16 sticky grid-container bg-background w-full">
      <ul class="flex flex-wrap gap-4 py-4">
        {
          headings
            .filter(heading => heading.depth < 3)
            .map(heading => (
              <li>
                <a class="px-4 py-1 rounded hover:bg-muted" href={"#" + heading.slug} >{heading.text}</a>
              </li>
            ))
        }
      </ul>
    </nav>

    <article class="prose">
      <Content />
    </article>
  </main>
</Layout>
